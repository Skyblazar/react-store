name: Test and Deploy

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '17'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm run test

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '17'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm ci

      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          check-version: true
          token: ${{ secrets.NPM_TOKEN }}

      - name: Get version
        id: pkg
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Check version change
        id: check
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          VERSION_CHANGED=$(git diff --unified=0 ${{ github.event.before }} HEAD -- package.json | grep '"version":')
          if [[ "$VERSION_CHANGED" != "" ]]; then echo "::set-output name=version_changed::true"; fi

      - name: Create Release
        if: steps.check.outputs.version_changed == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.pkg.outputs.version }}
          release_name: Release v${{ steps.pkg.outputs.version }}
          body: Release of version ${{ steps.pkg.outputs.version }}
          draft: false
          prerelease: false
